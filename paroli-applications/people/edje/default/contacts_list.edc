group { 
      name: "people";
      max: 480 590;
      parts {
          part{
            name: "base";
            type: RECT;
            description{ state: "default" 0.0;
              color:0 0 0 255;
              rel1{
                    relative: 0.0 0.0;
                }
                rel2 {
                    relative: 0.99 1.0;
                }
            }
          }
          part{
            name: "base2";
            type: RECT;
            clip_to:"base";
            description{ state: "default" 0.0;
              color:255 0 0 255;
              min: 440 200;
              
              rel1{
//                     relative: 0.0 -1.0;
//                   offset: 0 0;
                }
              rel2 {
//                   relative: 0.99 1.0;
              }
            }
          }
         part {
            name: "add-button";
            type: IMAGE;
            description {
               state: "default" 0.0;
               min: 40 40;
               max: 40 40;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 23 19;
                  to: "base";
               }
               rel2 {
                  relative: 0.0 0.0;
                  offset: 63 69;
                  to: "base";
               }
               image {
                  normal: "add.png";
               }
               visible: 1;
            }
         }
         part{
            name:"contacts-items-clip";
            type:RECT;
              description { 
              state: "default" 0.0;
              color: 255 255 255 255;
              rel1 { 
                  relative: 0.0 0.0;
                  offset: 30 100;
                  to: "base";
              }
              rel2 {
                  relative: 1.0 1.0;
                  offset: -30 0;
                  to: "base";
              }
            }
           }
         part{
            name:"contacts-items-clip2";
            type:RECT;
              description { 
              state: "default" 0.0;
              color: 0 0 0 255;
              rel1 { 
                  relative: 0.0 0.0;
                  offset: 30 100;
                  to: "base";
              }
              rel2 {
                  relative: 1.0 1.0;
                  offset: -30 0;
                  to: "base";
              }
            }
           }
          part{
            name:"contacts-items";
            clip_to:"contacts-items-clip";
            type:SWALLOW;
              description { 
              state: "default" 0.0;
              min: 420 550;
              max: 420 59000;
              color: 0 255 255 255;
              rel1 { 
                  relative: 0.0 0.0;
                  offset: 30 100;
                  to: "base";
              }
              rel2 {
                  relative: 1.0 1.0;
                  offset: -30 0;
                  to: "base";
              }
            }
            
            dragable{
              x: 0 0 0;
              y: 1 1 0;
              confine: "base2";
            }
           }
           part{
            name:"contacts-items-touch";
            clip_to:"contacts-items-clip2";
            type:RECT;
              description { 
              min: 80 640;
              state: "default" 0.0;
              color: 0 255 255 255;
              rel1 { 
                  relative: 0.0 0.0;
                  offset: 400 0;
                  to: "base";
              }
              rel2 {
                  relative: 1.0 1.0;
                  offset: 480 0;
                  to: "base";
              }
            }
            dragable{
              x: 0 0 0;
              y: 1 1 0;
              events: "contacts-items";
              confine: "base";
            }
           }
      }
      
      programs {
          program 
              { 
                name: "add-button";
                signal: "mouse,up,1";
                source: "add-button";
                action: SIGNAL_EMIT "add_contact" "contacts-items";
              }/*
          program{
              name: "dragging";
              signal: "drag,start";
              source: "contacts-items";
              action: SIGNAL_EMIT "drag-start" "touch";
              after:"load";
          }*/
          program{
              name: "load";
              signal: "*";
              source: "python";
              script{
                  
//                   new Float:dx;
                  new Float:dy;
                  new min_x;
                  new buf[100];
                  getsarg(0,buf,99);
                  set_drag(PART:"contacts-items", 1.0, 1.0);

                  new num = atoi(buf);

                  if (num < 9 ){
//                       new xtra = 0
                      num = 0
                  }else{
                      emit(buf, "touch")
                      num = 9 - num
                      
                    //                       new xtra = 540
                  }
                  
                  new minus = 50 + num * 60
                  new plus = 50 - num * 60
//                   create custom state
                  custom_state(PART:"base2", "default", 0.0);
//                   set the value to what you want it to be
                  set_state_val(PART:"base2", STATE_REL1_OFFSET, 0 , minus);
                  set_state_val(PART:"base2", STATE_REL2_OFFSET, 0 , plus);
//                   apply the new state
                  set_state(PART:"base2", "custom", 0.0);

//                   create custom state
                  custom_state(PART:"contacts-items", "default", 0.0);
//                   set the value to what you want it to be
                  set_state_val(PART:"contacts-items", STATE_MIN, 420, atoi(buf) * 60);
                  set_state_val(PART:"contacts-items", STATE_MAX, 420, atoi(buf) * 60);
//                   apply the new state
                  set_state(PART:"contacts-items", "custom", 0.0);                  
                  
                  get_state_val(PART:"contacts-items", STATE_MIN, dy, min_x)
                  
                  snprintf(buf, 100, "%d %d %d", plus, min_x, atoi(buf) * 60);
//                   get_state(PART:"base2", buf, 100, dx);
                  
//                   emit(buf,"touch");
//                   emit("drag-start","touch");
                  emit(buf,"touch");
              }
          }
      }
}
