#include "macros_rev2.edc"

images {
   image: "call.png" COMP;
   image: "end_call.png" COMP;
   image: "answer.png" COMP;
   image: "backspace.png" COMP;
   image: "speaker.png" COMP;
}

group{
    name: "tb";
    script {
        public clock_cb(val) {
            new buf[11];
            new year, month, day, yearday, weekday, hour, minute;
            new Float:second;
            new Float:s;
            
            date(year, month, day, yearday, weekday, hour, minute, second);
            s = 60.0 - second;
                  while (s < 0.0) s = s + 5.0;
            timer(60.0 - second, "clock_cb", 1);
            if ((hour < 10) && (minute < 10)) 
              {snprintf(buf, 10, "0%i:0%i", hour, minute);}
            else if ((hour < 10) && (minute >= 10))
              {snprintf(buf, 10, "0%i:%i", hour, minute);}
            else if ((hour >= 10) && (minute < 10))
              {snprintf(buf, 10, "%i:0%i", hour, minute);}
            else if ((hour >= 10) && (minute >= 10)) 
              {snprintf(buf, 10, "%i:%i", hour, minute);}
            set_text(PART:"clock", buf);
        }
        
      }
    parts
    {
        part 
        {
            name: "base";
            type: RECT;
            mouse_events: 1;
            description 
            { 
                state:   "default"  0.0;
                color: 0 0 0 255;
                rel1 
                {
                    relative: 0.0 0.0;
                }
                rel2 
                {
                    relative: 1.0 1.0;
                }
            }
        }
        part
        {
            name: "clock";
            type: TEXT;
            mouse_events:0;
            description { 
                state: "default" 0.0;
                color: 255 255 255 255;
                text {
                        align: 0.5 0.0;
                        size: 18;
                        text: "20:08";
                        font: "Sans";
                }
                rel1 {
                        relative: 0.0 0.0;
                        to: "base";
                }
                rel2 {
                        relative: 1.0 1.0;
                        to: "base";
                }
            }
        }
    }
    programs
    {
        program 
        { 
            name: "init";
            signal: "load";
            source: "*";
            script
            {
                clock_cb(1);
            }
        }
        program 
        { 
            name: "top-bar-clicked";
            signal: "mouse,up,1";
            source: "base";
            action: SIGNAL_EMIT "top-bar" "del-button";
        }
    }
    
}

group { name: "tele";
    min: 480 550;
    min: 480 640;
    script{
        public zero = 0;
        public mytimer = 0;
        
        public start_timer(){
            new local_timer = timer(1.0, "set_flag", 1);
            set_int(mytimer, local_timer);
        }
        
        public set_flag(s){
            set_int(zero,1);
            cancel_timer(get_int(mytimer));
            set_int(mytimer,0);
        }
        
        public stop_timer(){
            if (get_int(mytimer) != 0){
                cancel_timer(get_int(mytimer));
            }
        }
        
        public del_digit() {
            new state[30];
            new Float:floaty;
            if (get_state(PART:"del-button", state[0], 30, floaty) == 0)
              {
                if (strcmp(state, "default") == 0){
                  new old[40];
                  old[39] = get_text(PART:"num_field-text",old,40);
                  new len = strlen(old);
                  new txt[61];
                  snprintf(txt, 60, "%i%s", len, old);
                  emit(txt, "embryo");
                  if (len != 0)
                      {
                        new num[39];
                        strnprep(num, old, len-1);
                        set_text(PART:"num_field-text",num);
                        
                        
                      }
                }
                else if (strcmp(state, "pin") == 0) {
                  new old[40];
                  old[39] = get_text(PART:"num_field-text",old,40);
                  new old2[40];
                  old2[39] = get_text(PART:"pin-text",old2,40);
                  new len = strlen(old);
                  new txt[61];
                  snprintf(txt, 60, "%i%s", len, old);
                  emit(txt, "embryo");
                  if (len != 0)
                      {
                        new num[39];
                        strnprep(num, old, len-1);
                        set_text(PART:"num_field-text",num);
                        
                        new num2[39];
                        strnprep(num2, old2, len-1);
                        set_text(PART:"pin-text",num2);
                      }
                }
                else if (strcmp(state, "incoming") == 0) {
                  emit("mute-toggle", "del-button");
                  set_state(PART:"del-button", "silent", 0.0);
                }
                else if (strcmp(state, "active") == 0) {
                  emit("mute-toggle", "del-button");
                  set_state(PART:"del-button", "muted", 0.0);
                }
                else if (strcmp(state, "muted") == 0) {
                  emit("mute-toggle", "del-button");
                  set_state(PART:"del-button", "active", 0.0);
                }
                else {
                    emit("coming soon to a cinema near you", "embryo");
                }
            }
        }
        
        public call_btn() {
            new state[30];
            new txt[60];
            new Float:floaty;
            if (get_state(PART:"call-button", state[0], 30, floaty) == 0)
              {
                if (strcmp(state, "default") == 0){
                  snprintf(txt, 60, "%s", state);
                  emit(txt, "embryo");
                  
                  new num[40];
                  num[39] = get_text(PART:"num_field-text",num,40);
                  if (strlen(num) > 0 ) {
                      emit(num, "call");
                  }
                  else {
                      emit("ooops too little data", "embryo");
                  }
                }
                else if (strcmp(state, "incoming") == 0){
                  emit("activate", "call");
                }
                else if ((strcmp(state, "active") == 0) || 
                  (strcmp(state, "dialing") == 0)){
                  emit("release", "call");  
                }
                else if (strcmp(state, "pin") == 0){
                  new num[40];
                  num[39] = get_text(PART:"pin-text",num,40);
                  emit(num, "sending_pin");
                }
              }
            else 
              {
                emit("blew up", "embryo");
              }
//             if (strcmp(state, "default") == 0) {
//                 new num[40];
//                 num[39] = get_text(PART:"num_field-text",num,40);
//                 emit(num, "call");
//             }
        }
    }

    parts
    {
        part 
        {
            name: "base";
            type: RECT;
            description 
            { 
                state:   "default"  0.0;
                color: 0 0 0 255;
            }
        }
        part
        {
            name: "num_field";
            type: RECT;
            description 
            { 
                state: "default" 0.0;
                color: 0 0 0 255;
                rel1 
                {
                    relative: 0.0 0.05;
                }
                rel2 
                {
                    relative: 1.0 0.19;
                }
            }
            description
            {
              state: "incoming" 0.0;
              inherit:"default" 0.0;
            }
            description
            {
              state: "dialing" 0.0;
              inherit:"default" 0.0;
            }
            description
            {
              state: "active" 0.0;
              inherit:"default" 0.0;
            }
            description
            {
              state: "releasing" 0.0;
              inherit:"default" 0.0;
            }
            description
            {
              state: "pin" 0.0;
              inherit:"default" 0.0;
            }
        }
        part
        {
            name: "num_field-text";
            type: TEXT;
            mouse_events: 0;
            description 
            { 
                state: "default" 0.0;
                color: 255 255 255 255;
                text 
                {
                    align: 0.05 1.0;
                    size: 48;
                    text: "";
                    font: "Sans";
                }
                rel1 
                {
                    relative: 0.00 0.0;
                    to: "num_field";
                }
                rel2 
                {
                    relative: 1.0 1.0;
                    to: "num_field";
                }
            }
            description
            {
              state: "incoming" 0.0;
              inherit:"default" 0.0;
            }
            description
            {
              state: "dialing" 0.0;
              inherit:"default" 0.0;
            }
            description
            {
              state: "active" 0.0;
              inherit:"default" 0.0;
            }
            description
            {
              state: "releasing" 0.0;
              inherit:"default" 0.0;
            }
            description
            {
              state: "pin" 0.0;
              inherit:"default" 0.0;
            }
        }
         part {
            name: "call-button";
            type: IMAGE;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.20;
               }
               rel2 {
                  relative: 0.65 0.35;
               }
               image {
                  normal: "call.png";
               }
               visible: 1;
            }
            description
            {
              state: "incoming" 0.0;
              inherit:"default" 0.0;
              image.normal: "answer.png";
            }
            description
            {
              state: "pin" 0.0;
              inherit:"default" 0.0;
              image.normal: "answer.png";
            }
            description
            {
              state: "dialing" 0.0;
              inherit:"default" 0.0;
              image.normal: "end_call.png";
            }
            description
            {
              state: "active" 0.0;
              inherit:"default" 0.0;
              image.normal: "end_call.png";
            }
            description
            {
              state: "releasing" 0.0;
              inherit:"default" 0.0;
            }
         }

         part {
            name: "del-button";
            type: IMAGE;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.66 0.20;
               }
               rel2 {
                  relative: 1.0 0.35;
               }
               image {
                  normal: "backspace.png";
               }
               visible: 1;
            }
            description
            {
              state: "incoming" 0.0;
              inherit:"default" 0.0;
              image.normal: "speaker.png";
            }
            description
            {
              state: "pin" 0.0;
              inherit:"default" 0.0;
            }
            description
            {
              state: "dialing" 0.0;
              inherit:"default" 0.0;
              image.normal: "speaker.png";
            }
            description
            {
              state: "silent" 0.0;
              inherit:"default" 0.0;
              image.normal: "speaker.png";
            }
            description
            {
              state: "active" 0.0;
              inherit:"default" 0.0;
              image.normal: "speaker.png";
            }
            description
            {
              state: "muted" 0.0;
              inherit:"default" 0.0;
              image.normal: "speaker.png";
            }
            description
            {
              state: "releasing" 0.0;
              inherit:"default" 0.0;
            }
         }

// // //         ROW TWO
        _PART_KEYPAD("button-1", "1", "", 0.0, 0.36,  0.32, 0.51);
        _PART_KEYPAD("button-2", "2", "ABC", 0.33, 0.36,  0.65, 0.51);
        _PART_KEYPAD("button-3", "3", "DEF", 0.66, 0.36,  1.0, 0.51);
// // //         ROW THREE
        _PART_KEYPAD("button-4", "4", "GHI", 0.0, 0.52,  0.32, 0.67);
        _PART_KEYPAD("button-5", "5", "JKL", 0.33, 0.52,  0.65, 0.67);
        _PART_KEYPAD("button-6", "6", "MNO", 0.66, 0.52,  1.0, 0.67);
// // //         ROW FOUR
        _PART_KEYPAD("button-7", "7", "PQRS", 0.0, 0.68,  0.32, 0.83);
        _PART_KEYPAD("button-8", "8", "TUV", 0.33, 0.68,  0.65, 0.83);
        _PART_KEYPAD("button-9", "9", "XYZ", 0.66, 0.68,  1.0, 0.83);
// // //         ROW FIVE
        _PART_KEYPAD("button-star", "*", "", 0.0, 0.84,  0.32, 1.0);
        _PART_KEYPAD("button-0", "0", "+", 0.33, 0.84,  0.65, 1.0);
        _PART_KEYPAD("button-hash", "#", "", 0.66, 0.84,  1.0, 1.0);
        
        part
        {
            name:"blocker";
            type: RECT;
            mouse_events:1;
            description
            { 
                state: "default" 0.0;
                visible:0;
            }
            description
            {
              state: "incoming" 0.0;
              color: 0 0 0 100;
              rel1 
              {
                  relative: 0.0 0.36;
              }
              rel2 
              {
                  relative: 1.0 1.0;
              }
            }
            description
            {
              state: "dialing" 0.0;
              inherit:"incoming" 0.0;
            }
            description
            {
              state: "active" 0.0;
              inherit:"default" 0.0;
            }
            description
            {
              state: "pin" 0.0;
              inherit:"default" 0.0;
            }
            description
            {
              state: "releasing" 0.0;
              inherit:"incoming" 0.0;
            }
        }
        part
        {
            name: "pin-text";
            type: TEXT;
            mouse_events: 0;
            description 
            { 
                state: "default" 0.0;
                color: 255 0 0 255;
                visible:1;
                text
                {
                    align: 0.5 0.0;
                    size: 18;
                    text: "";
                    font: "Sans";
                }
                rel1 
                {
                    relative: 0.0 0.0;
                    to: "base";
                }
                rel2 
                {
                    relative: 1.0 1.0;
                    to: "base";
                }
            }
        }
    }
    programs
    {
        program 
        { 
            name: "num_field-clicked";
            signal: "mouse,clicked,1";
            source: "num_field";
            action: SIGNAL_EMIT "num_field_pressed" "num_field-text";
        }
        program 
        { 
            name: "call-button-clicked";
            signal: "mouse,clicked,1";
            source: "call-button";
//             action: SIGNAL_EMIT "func_btn" "call-button";
            script{
              call_btn();
            }
        }
        program 
        { 
            name: "del-button-clicked";
            signal: "mouse,clicked,1";
            source: "del-button";
            script{
              del_digit();
            }
        }
        program 
        { 
            name: "button-0-timer-on";
            signal: "mouse,down,1";
            source: "button-0";
            script{
                new state[30];
                new Float:floaty;
                if (get_state(PART:"del-button", state[0], 30, floaty) == 0)
                {
                    if (strcmp(state, "pin") != 0){
                        start_timer();
                    }
                }
            }
        }
        program 
        { 
            name: "button-0-timer-off";
            signal: "mouse,up,1";
            source: "button-0";
            script{
                new state[30];
                new Float:floaty;
                if (get_state(PART:"del-button", state[0], 30, floaty) == 0)
                {
                    if (strcmp(state, "pin") != 0){
                        stop_timer();
                    }
                }
            }
        }
//         STATE CHANGE PROGRAMS
           _PART_STATE_CHANGE_PROG("default", "0.0");
           _PART_STATE_CHANGE_PROG("incoming", 0.0);
           _PART_STATE_CHANGE_PROG("dialing", 0.0);
           _PART_STATE_CHANGE_PROG("active", 0.0);
           _PART_STATE_CHANGE_PROG("releasing", 0.0);
           _PART_STATE_CHANGE_PROG("pin", 0.0);
//         programs ROW TWO
           _PART_KEYPAD_PROG("button-1", "1");
           _PART_KEYPAD_PROG("button-2", "2");
           _PART_KEYPAD_PROG("button-3", "3");
//         programs ROW THREE
           _PART_KEYPAD_PROG("button-4", "4");
           _PART_KEYPAD_PROG("button-5", "5");
           _PART_KEYPAD_PROG("button-6", "6");
//         programs ROW FOUR
           _PART_KEYPAD_PROG("button-7", "7");
           _PART_KEYPAD_PROG("button-8", "8");
           _PART_KEYPAD_PROG("button-9", "9");
//         programs ROW FIVE
           _PART_KEYPAD_PROG("button-star", "*");
           _PART_KEYPAD_PROG("button-0", "0");
           _PART_KEYPAD_PROG("button-hash", "#");

        program 
        { 
            name: "mute-error";
            signal: "mute-button";
            source: "error";
            action: STATE_SET "active" 0.0;
            target: "del-button";
        }
    }
}
