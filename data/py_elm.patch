Index: ./include/elementary/c_elementary.pxd
===================================================================
--- ./include/elementary/c_elementary.pxd	(revision 40567)
+++ ./include/elementary/c_elementary.pxd	(working copy)
@@ -51,6 +51,11 @@
     ELM_TEXT_FORMAT_PLAIN_UTF8
     ELM_TEXT_FORMAT_MARKUP_UTF8
 
+cdef enum Elm_Scroller_Policy:
+    ELM_SCROLLER_POLICY_AUTO
+    ELM_SCROLLER_POLICY_ON
+    ELM_SCROLLER_POLICY_OFF
+
 cdef enum Elm_Icon_Type:
     ELM_ICON_NONE
     ELM_ICON_FILE
@@ -68,6 +73,8 @@
 cdef extern from "Ecore_X.h":
     ctypedef unsigned int Ecore_X_ID
     ctypedef Ecore_X_ID Ecore_X_Window
+    void ecore_x_e_virtual_keyboard_state_set(Ecore_X_Window win, Ecore_X_Virtual_Keyboard_State state)
+    
 
 # For Debugging
 """
@@ -78,6 +85,9 @@
 cdef extern from "Eina.h":
     ctypedef struct Eina_List
 
+cdef extern from "Evas.h":
+    ctypedef int Evas_Coord
+
 cdef extern from "Ecore_Job.h":
     ctypedef struct Ecore_Job
 
@@ -149,6 +159,7 @@
     
     # X specific call - wont't work on non-x engines (return 0)
     Ecore_X_Window elm_win_xwindow_get(evas.c_evas.Evas_Object *obj)
+    void x_window_virtual_keyboard_state_set(evas.c_evas.Evas_Object *obj, Ecore_X_Virtual_Keyboard_State state)
     
     evas.c_evas.Evas_Object *elm_win_inwin_add(evas.c_evas.Evas_Object *obj)
     void elm_win_inwin_activate(evas.c_evas.Evas_Object *obj)
@@ -187,7 +198,10 @@
     evas.c_evas.Evas_Object *elm_scroller_add(evas.c_evas.Evas_Object *parent)
     void elm_scroller_content_set(evas.c_evas.Evas_Object *obj, evas.c_evas.Evas_Object *child)
     void elm_scroller_content_min_limit(evas.c_evas.Evas_Object *obj, evas.c_evas.Evas_Bool w, evas.c_evas.Evas_Bool h)
-    void         elm_scroller_region_show(evas.c_evas.Evas_Object *obj, evas.c_evas.Evas_Coord x, evas.c_evas.Evas_Coord y, evas.c_evas.Evas_Coord w, evas. c_evas.Evas_Coord h)
+    void elm_scroller_region_show(evas.c_evas.Evas_Object *obj, evas.c_evas.Evas_Coord x, evas.c_evas.Evas_Coord y, evas.c_evas.Evas_Coord w, evas. c_evas.Evas_Coord h)
+    void elm_scroller_bounce_set(evas.c_evas.Evas_Object *obj, evas.c_evas.Evas_Bool h_bounce, evas.c_evas.Evas_Bool v_bounce)
+    void elm_scroller_region_get(evas.c_evas.Evas_Object *obj, evas.c_evas.Evas_Coord x, evas.c_evas.Evas_Coord y, evas.c_evas.Evas_Coord w, evas.c_evas.Evas_Coord h)
+    void elm_scroller_policy_set(evas.c_evas.Evas_Object *obj, Elm_Scroller_Policy policy_h, Elm_Scroller_Policy policy_v)
     
     # Label object  
     evas.c_evas.Evas_Object *elm_label_add(evas.c_evas.Evas_Object *parent)

Index: ./elementary/elementary.c_elementary_scroller.pxi
===================================================================
--- ./elementary/elementary.c_elementary_scroller.pxi	(revision 40567)
+++ ./elementary/elementary.c_elementary_scroller.pxi	(working copy)
@@ -23,7 +23,18 @@
     def content_set(self, c_evas.Object child):
         elm_scroller_content_set(self.obj, child.obj)
 
-    def content_min_limit(self, w, h):
+    def content_min_limit(self, int w, int h):
         elm_scroller_content_min_limit(self.obj, w, h)
 
+    def region_show(self, x, y, w, h):
+        elm_scroller_region_show(self.obj, x, y, w, h)
+        
+    def policy_set(self, h, v):
+        elm_scroller_policy_set(self.obj, h, v)
 
+    #results in segfault
+    #def region_get(self, x, y, w, h):
+        #elm_scroller_region_get(self.obj, x, y, w, h)
+        
+    def bounce_set(self, h_bounce, v_bounce):
+        elm_scroller_bounce_set(self.obj, h_bounce, v_bounce)
Index: ./elementary/elementary.c_elementary_window.pxi
===================================================================
--- ./elementary/elementary.c_elementary_window.pxi	(revision 40567)
+++ ./elementary/elementary.c_elementary_window.pxi	(working copy)
@@ -136,14 +136,7 @@
         else:
             elm_win_keyboard_win_set(self.obj, 0)
 
-    # TODO
-    """
     def xwindow_get(self):
         cdef Ecore_X_Window xwin
         xwin = elm_win_xwindow_get(self.obj)
-        
-
-        return Null
-    """
-
-
+        return xwin
